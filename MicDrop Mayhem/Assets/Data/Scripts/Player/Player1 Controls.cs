//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Data/Scripts/Player/Player1 Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Player1Controls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Player1Controls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Player1 Controls"",
    ""maps"": [
        {
            ""name"": ""Player Movement"",
            ""id"": ""ddbe507d-4113-4797-9ef3-64cf38dedfaa"",
            ""actions"": [
                {
                    ""name"": ""P1_Movement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""f9d25ef1-f968-4f61-aebc-b41ac362057e"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""P2_Movement"",
                    ""type"": ""Value"",
                    ""id"": ""c96a5019-7551-4e66-b516-eb3451a0e2fa"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""53b83169-266f-4a24-84b7-289d2f4240df"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump_P2"",
                    ""type"": ""Button"",
                    ""id"": ""3160e021-74dd-471b-a632-746df79a663b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""27b878da-a45d-4b01-aabb-b52b063a553b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""7b990f1e-3c04-4d97-aaab-68733d4519bc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Attack_P2"",
                    ""type"": ""Button"",
                    ""id"": ""e3ddc2c0-bd8f-49e2-8f08-afa7f2533d64"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""P1_SPbtnQ"",
                    ""type"": ""Button"",
                    ""id"": ""3c5fe49f-b33d-454b-8625-61727d513719"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""P2_SPbtnUP"",
                    ""type"": ""Button"",
                    ""id"": ""bb980cd7-cefa-4c7b-b370-8b45681a3f38"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SPbtnRIGHT"",
                    ""type"": ""Button"",
                    ""id"": ""365ab88f-8c13-45c6-9fa8-a678008fe1ac"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SPbtnLEFT"",
                    ""type"": ""Button"",
                    ""id"": ""0cdd5188-db65-49f9-bef6-725b690dfc4a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""ee144ba6-3147-4aad-8af3-9239b06c4ac6"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""P1_Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""e2ec19bc-45d0-4881-a9ff-485b2011fc18"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""P1_Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""e89b4dbd-e1b9-4a23-abd1-386af22940c2"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""P1_Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""1779dbd7-9e05-4b45-aeb3-69e99963419b"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""P1_Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""e3c1d1b4-efd2-4a21-b596-405c8a9bbb3c"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""P1_Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""ffce6e75-8c18-4f14-af90-77799ac303cd"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1228f78f-2f44-4c0c-884b-41dd914a49f4"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a85a9675-c5b2-4aed-a0e6-e8c9de4ea8c6"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b4fe7c25-db2c-4cd6-92c7-ef066926da15"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""P1_SPbtnQ"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6207bca3-5a2b-43b8-b20d-170d31821ddd"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SPbtnLEFT"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f86c57f0-a2f1-4fad-bd50-b68d1f25778b"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SPbtnRIGHT"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2e360003-d5b5-4fcd-8e54-f78ee12ebceb"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""P2_SPbtnUP"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Joystick"",
                    ""id"": ""e441e4b6-00e3-4e0b-a4c0-8af6ab361087"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""P2_Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""dda00e12-cf56-436d-8176-230d7f1d3540"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""P2_Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""15e4e731-2a7a-4343-9421-26deae36161d"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""P2_Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""e34f54fd-88bd-425a-93a0-4b28dd52828f"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""P2_Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""fe4d2428-25c7-4224-9a56-5bd437aa2588"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""P2_Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""ArrowKeys"",
                    ""id"": ""0d47e227-6726-4b93-8d93-203245e10718"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""P2_Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""594b1c23-6eaa-4def-924a-2ef6b646b393"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""P2_Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""3dbf7e8e-e1c1-4943-b342-8d0463870d14"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""P2_Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""fde62c11-6f22-4893-a607-09cefad0824a"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""P2_Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""f090e593-1841-4392-9e31-60902aaec0ea"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""P2_Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""2fed7525-45b0-4ac7-89e2-d346c0978372"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack_P2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d74d7d7d-e747-4aad-b5b8-30762d1a3a5f"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack_P2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4c8a5639-d291-4be6-bec4-ff8c28da9c6f"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump_P2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0531f6f7-8f78-4f6b-9e7a-75899c06c045"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump_P2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Player2_Movement"",
            ""id"": ""7981ef97-393e-47e4-9633-20b636868d7d"",
            ""actions"": [
                {
                    ""name"": ""Dash_P2"",
                    ""type"": ""Button"",
                    ""id"": ""0af3cf4a-3caa-486d-a18e-8d4f940747e6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""18d102bc-0bc9-4146-a1f8-93ece9671deb"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash_P2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Player Camera"",
            ""id"": ""2125e625-7b37-4180-a535-aece413e4b38"",
            ""actions"": [
                {
                    ""name"": ""Cam Movement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""09049bed-68ff-41c0-8431-c7f2cc88cac3"",
                    ""expectedControlType"": ""Delta"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Mouse"",
                    ""id"": ""9a00c31c-12de-4ea0-961b-ea45967e5ec9"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cam Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""e3e8e967-c37e-41fc-ae5b-cd1c6d0ec218"",
                    ""path"": ""<Mouse>/delta/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cam Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""2bdabc7f-78be-4361-aef7-63877ea231d0"",
                    ""path"": ""<Mouse>/delta/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cam Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""b95845b2-b2c1-4240-80ee-a1b059e1a6e1"",
                    ""path"": ""<Mouse>/delta/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cam Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""be2777bb-6651-44f6-825c-aaf954a79ff5"",
                    ""path"": ""<Mouse>/delta/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cam Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player Movement
        m_PlayerMovement = asset.FindActionMap("Player Movement", throwIfNotFound: true);
        m_PlayerMovement_P1_Movement = m_PlayerMovement.FindAction("P1_Movement", throwIfNotFound: true);
        m_PlayerMovement_P2_Movement = m_PlayerMovement.FindAction("P2_Movement", throwIfNotFound: true);
        m_PlayerMovement_Jump = m_PlayerMovement.FindAction("Jump", throwIfNotFound: true);
        m_PlayerMovement_Jump_P2 = m_PlayerMovement.FindAction("Jump_P2", throwIfNotFound: true);
        m_PlayerMovement_Dash = m_PlayerMovement.FindAction("Dash", throwIfNotFound: true);
        m_PlayerMovement_Attack = m_PlayerMovement.FindAction("Attack", throwIfNotFound: true);
        m_PlayerMovement_Attack_P2 = m_PlayerMovement.FindAction("Attack_P2", throwIfNotFound: true);
        m_PlayerMovement_P1_SPbtnQ = m_PlayerMovement.FindAction("P1_SPbtnQ", throwIfNotFound: true);
        m_PlayerMovement_P2_SPbtnUP = m_PlayerMovement.FindAction("P2_SPbtnUP", throwIfNotFound: true);
        m_PlayerMovement_SPbtnRIGHT = m_PlayerMovement.FindAction("SPbtnRIGHT", throwIfNotFound: true);
        m_PlayerMovement_SPbtnLEFT = m_PlayerMovement.FindAction("SPbtnLEFT", throwIfNotFound: true);
        // Player2_Movement
        m_Player2_Movement = asset.FindActionMap("Player2_Movement", throwIfNotFound: true);
        m_Player2_Movement_Dash_P2 = m_Player2_Movement.FindAction("Dash_P2", throwIfNotFound: true);
        // Player Camera
        m_PlayerCamera = asset.FindActionMap("Player Camera", throwIfNotFound: true);
        m_PlayerCamera_CamMovement = m_PlayerCamera.FindAction("Cam Movement", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player Movement
    private readonly InputActionMap m_PlayerMovement;
    private List<IPlayerMovementActions> m_PlayerMovementActionsCallbackInterfaces = new List<IPlayerMovementActions>();
    private readonly InputAction m_PlayerMovement_P1_Movement;
    private readonly InputAction m_PlayerMovement_P2_Movement;
    private readonly InputAction m_PlayerMovement_Jump;
    private readonly InputAction m_PlayerMovement_Jump_P2;
    private readonly InputAction m_PlayerMovement_Dash;
    private readonly InputAction m_PlayerMovement_Attack;
    private readonly InputAction m_PlayerMovement_Attack_P2;
    private readonly InputAction m_PlayerMovement_P1_SPbtnQ;
    private readonly InputAction m_PlayerMovement_P2_SPbtnUP;
    private readonly InputAction m_PlayerMovement_SPbtnRIGHT;
    private readonly InputAction m_PlayerMovement_SPbtnLEFT;
    public struct PlayerMovementActions
    {
        private @Player1Controls m_Wrapper;
        public PlayerMovementActions(@Player1Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @P1_Movement => m_Wrapper.m_PlayerMovement_P1_Movement;
        public InputAction @P2_Movement => m_Wrapper.m_PlayerMovement_P2_Movement;
        public InputAction @Jump => m_Wrapper.m_PlayerMovement_Jump;
        public InputAction @Jump_P2 => m_Wrapper.m_PlayerMovement_Jump_P2;
        public InputAction @Dash => m_Wrapper.m_PlayerMovement_Dash;
        public InputAction @Attack => m_Wrapper.m_PlayerMovement_Attack;
        public InputAction @Attack_P2 => m_Wrapper.m_PlayerMovement_Attack_P2;
        public InputAction @P1_SPbtnQ => m_Wrapper.m_PlayerMovement_P1_SPbtnQ;
        public InputAction @P2_SPbtnUP => m_Wrapper.m_PlayerMovement_P2_SPbtnUP;
        public InputAction @SPbtnRIGHT => m_Wrapper.m_PlayerMovement_SPbtnRIGHT;
        public InputAction @SPbtnLEFT => m_Wrapper.m_PlayerMovement_SPbtnLEFT;
        public InputActionMap Get() { return m_Wrapper.m_PlayerMovement; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerMovementActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerMovementActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerMovementActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerMovementActionsCallbackInterfaces.Add(instance);
            @P1_Movement.started += instance.OnP1_Movement;
            @P1_Movement.performed += instance.OnP1_Movement;
            @P1_Movement.canceled += instance.OnP1_Movement;
            @P2_Movement.started += instance.OnP2_Movement;
            @P2_Movement.performed += instance.OnP2_Movement;
            @P2_Movement.canceled += instance.OnP2_Movement;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @Jump_P2.started += instance.OnJump_P2;
            @Jump_P2.performed += instance.OnJump_P2;
            @Jump_P2.canceled += instance.OnJump_P2;
            @Dash.started += instance.OnDash;
            @Dash.performed += instance.OnDash;
            @Dash.canceled += instance.OnDash;
            @Attack.started += instance.OnAttack;
            @Attack.performed += instance.OnAttack;
            @Attack.canceled += instance.OnAttack;
            @Attack_P2.started += instance.OnAttack_P2;
            @Attack_P2.performed += instance.OnAttack_P2;
            @Attack_P2.canceled += instance.OnAttack_P2;
            @P1_SPbtnQ.started += instance.OnP1_SPbtnQ;
            @P1_SPbtnQ.performed += instance.OnP1_SPbtnQ;
            @P1_SPbtnQ.canceled += instance.OnP1_SPbtnQ;
            @P2_SPbtnUP.started += instance.OnP2_SPbtnUP;
            @P2_SPbtnUP.performed += instance.OnP2_SPbtnUP;
            @P2_SPbtnUP.canceled += instance.OnP2_SPbtnUP;
            @SPbtnRIGHT.started += instance.OnSPbtnRIGHT;
            @SPbtnRIGHT.performed += instance.OnSPbtnRIGHT;
            @SPbtnRIGHT.canceled += instance.OnSPbtnRIGHT;
            @SPbtnLEFT.started += instance.OnSPbtnLEFT;
            @SPbtnLEFT.performed += instance.OnSPbtnLEFT;
            @SPbtnLEFT.canceled += instance.OnSPbtnLEFT;
        }

        private void UnregisterCallbacks(IPlayerMovementActions instance)
        {
            @P1_Movement.started -= instance.OnP1_Movement;
            @P1_Movement.performed -= instance.OnP1_Movement;
            @P1_Movement.canceled -= instance.OnP1_Movement;
            @P2_Movement.started -= instance.OnP2_Movement;
            @P2_Movement.performed -= instance.OnP2_Movement;
            @P2_Movement.canceled -= instance.OnP2_Movement;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @Jump_P2.started -= instance.OnJump_P2;
            @Jump_P2.performed -= instance.OnJump_P2;
            @Jump_P2.canceled -= instance.OnJump_P2;
            @Dash.started -= instance.OnDash;
            @Dash.performed -= instance.OnDash;
            @Dash.canceled -= instance.OnDash;
            @Attack.started -= instance.OnAttack;
            @Attack.performed -= instance.OnAttack;
            @Attack.canceled -= instance.OnAttack;
            @Attack_P2.started -= instance.OnAttack_P2;
            @Attack_P2.performed -= instance.OnAttack_P2;
            @Attack_P2.canceled -= instance.OnAttack_P2;
            @P1_SPbtnQ.started -= instance.OnP1_SPbtnQ;
            @P1_SPbtnQ.performed -= instance.OnP1_SPbtnQ;
            @P1_SPbtnQ.canceled -= instance.OnP1_SPbtnQ;
            @P2_SPbtnUP.started -= instance.OnP2_SPbtnUP;
            @P2_SPbtnUP.performed -= instance.OnP2_SPbtnUP;
            @P2_SPbtnUP.canceled -= instance.OnP2_SPbtnUP;
            @SPbtnRIGHT.started -= instance.OnSPbtnRIGHT;
            @SPbtnRIGHT.performed -= instance.OnSPbtnRIGHT;
            @SPbtnRIGHT.canceled -= instance.OnSPbtnRIGHT;
            @SPbtnLEFT.started -= instance.OnSPbtnLEFT;
            @SPbtnLEFT.performed -= instance.OnSPbtnLEFT;
            @SPbtnLEFT.canceled -= instance.OnSPbtnLEFT;
        }

        public void RemoveCallbacks(IPlayerMovementActions instance)
        {
            if (m_Wrapper.m_PlayerMovementActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerMovementActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerMovementActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerMovementActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerMovementActions @PlayerMovement => new PlayerMovementActions(this);

    // Player2_Movement
    private readonly InputActionMap m_Player2_Movement;
    private List<IPlayer2_MovementActions> m_Player2_MovementActionsCallbackInterfaces = new List<IPlayer2_MovementActions>();
    private readonly InputAction m_Player2_Movement_Dash_P2;
    public struct Player2_MovementActions
    {
        private @Player1Controls m_Wrapper;
        public Player2_MovementActions(@Player1Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Dash_P2 => m_Wrapper.m_Player2_Movement_Dash_P2;
        public InputActionMap Get() { return m_Wrapper.m_Player2_Movement; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(Player2_MovementActions set) { return set.Get(); }
        public void AddCallbacks(IPlayer2_MovementActions instance)
        {
            if (instance == null || m_Wrapper.m_Player2_MovementActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_Player2_MovementActionsCallbackInterfaces.Add(instance);
            @Dash_P2.started += instance.OnDash_P2;
            @Dash_P2.performed += instance.OnDash_P2;
            @Dash_P2.canceled += instance.OnDash_P2;
        }

        private void UnregisterCallbacks(IPlayer2_MovementActions instance)
        {
            @Dash_P2.started -= instance.OnDash_P2;
            @Dash_P2.performed -= instance.OnDash_P2;
            @Dash_P2.canceled -= instance.OnDash_P2;
        }

        public void RemoveCallbacks(IPlayer2_MovementActions instance)
        {
            if (m_Wrapper.m_Player2_MovementActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayer2_MovementActions instance)
        {
            foreach (var item in m_Wrapper.m_Player2_MovementActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_Player2_MovementActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public Player2_MovementActions @Player2_Movement => new Player2_MovementActions(this);

    // Player Camera
    private readonly InputActionMap m_PlayerCamera;
    private List<IPlayerCameraActions> m_PlayerCameraActionsCallbackInterfaces = new List<IPlayerCameraActions>();
    private readonly InputAction m_PlayerCamera_CamMovement;
    public struct PlayerCameraActions
    {
        private @Player1Controls m_Wrapper;
        public PlayerCameraActions(@Player1Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @CamMovement => m_Wrapper.m_PlayerCamera_CamMovement;
        public InputActionMap Get() { return m_Wrapper.m_PlayerCamera; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerCameraActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerCameraActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerCameraActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerCameraActionsCallbackInterfaces.Add(instance);
            @CamMovement.started += instance.OnCamMovement;
            @CamMovement.performed += instance.OnCamMovement;
            @CamMovement.canceled += instance.OnCamMovement;
        }

        private void UnregisterCallbacks(IPlayerCameraActions instance)
        {
            @CamMovement.started -= instance.OnCamMovement;
            @CamMovement.performed -= instance.OnCamMovement;
            @CamMovement.canceled -= instance.OnCamMovement;
        }

        public void RemoveCallbacks(IPlayerCameraActions instance)
        {
            if (m_Wrapper.m_PlayerCameraActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerCameraActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerCameraActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerCameraActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerCameraActions @PlayerCamera => new PlayerCameraActions(this);
    public interface IPlayerMovementActions
    {
        void OnP1_Movement(InputAction.CallbackContext context);
        void OnP2_Movement(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnJump_P2(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
        void OnAttack(InputAction.CallbackContext context);
        void OnAttack_P2(InputAction.CallbackContext context);
        void OnP1_SPbtnQ(InputAction.CallbackContext context);
        void OnP2_SPbtnUP(InputAction.CallbackContext context);
        void OnSPbtnRIGHT(InputAction.CallbackContext context);
        void OnSPbtnLEFT(InputAction.CallbackContext context);
    }
    public interface IPlayer2_MovementActions
    {
        void OnDash_P2(InputAction.CallbackContext context);
    }
    public interface IPlayerCameraActions
    {
        void OnCamMovement(InputAction.CallbackContext context);
    }
}
